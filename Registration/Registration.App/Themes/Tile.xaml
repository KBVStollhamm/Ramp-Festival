<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:ctrl="clr-namespace:Registration.Controls">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="/Themes/Common.xaml" />
		<ResourceDictionary Source="/Themes/TextBlock.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<Style TargetType="ctrl:Tile">
		<!--<Setter Property="Width"
				Value="140" />
		<Setter Property="Height"
				Value="140" />-->
		<Setter Property="Margin"
				Value="3" />
		<Setter Property="Foreground"
				Value="White" />
		<Setter Property="Background"
				Value="{DynamicResource Accent}" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="RenderTransformOrigin"
				Value="0.5,0.5" />
		<Setter Property="TitleFontSize"
				Value="16"/>
		<Setter Property="CountFontSize"
				Value="28"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ctrl:Tile">
					<Grid Background="{TemplateBinding Background}">
						<StackPanel VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Orientation="Horizontal">
							<ContentPresenter RecognizesAccessKey="True" />
							<TextBlock Text="{TemplateBinding Count}"
									   FontSize="{Binding CountFontSize, RelativeSource={RelativeSource TemplatedParent}}"
									   VerticalAlignment="Center" />
						</StackPanel>

						<Label Grid.ColumnSpan="2"
							   HorizontalAlignment="Left"
							   VerticalAlignment="Bottom"
							   Foreground="{TemplateBinding Foreground}">
							<AccessText Text="{Binding Title, RelativeSource={RelativeSource TemplatedParent}}"
										Foreground="{TemplateBinding Foreground}"
										TextWrapping="Wrap"
										FontSize="{Binding TitleFontSize, RelativeSource={RelativeSource TemplatedParent}}"
										Margin="3" />
						</Label>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="Button.IsPressed"
								 Value="True">
							<Setter Property="RenderTransform">
								<Setter.Value>
									<ScaleTransform ScaleX="0.98"
													ScaleY="0.98"
													CenterX="0.5"
													CenterY="0.5" />
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="ctrl:AnimatedTile">
		<Setter Property="Margin"
				Value="3" />
		<Setter Property="Foreground"
				Value="White" />
		<Setter Property="Background"
				Value="{DynamicResource Accent}" />
		<Setter Property="HorizontalContentAlignment"
				Value="Center" />
		<Setter Property="VerticalContentAlignment"
				Value="Center" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="RenderTransformOrigin"
				Value="0.5,0.5" />
		<Setter Property="TitleFontSize"
				Value="16"/>
		<Setter Property="CountFontSize"
				Value="28"/>
		<Setter Property="FontSize"
				Value="60"/>
		<!--<Setter Property="Content" Value="{Binding RelativeSource={RelativeSource Self}, Path=Count}" />-->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ctrl:AnimatedTile}">



					<Border BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}">
						<Grid Grid.Row="1" Margin="0,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
							<Viewport3D x:Name="vp3D" Visibility="Hidden" Width="Auto" Height="Auto">
								<Viewport3D.Camera>
									<PerspectiveCamera x:Name="camera" Position="0,0,0.5" LookDirection="0,0,-1" FieldOfView="90" />
								</Viewport3D.Camera>
								<Viewport3D.Children>
									<ModelVisual3D>
										<ModelVisual3D.Content>
											<Model3DGroup>
												<DirectionalLight Color="#444" Direction="0,0,-1" />
												<AmbientLight Color="#BBB" />
											</Model3DGroup>
										</ModelVisual3D.Content>
									</ModelVisual3D>
									<ModelVisual3D>
										<ModelVisual3D.Content>
											<GeometryModel3D>
												<GeometryModel3D.Geometry>
													<MeshGeometry3D  TriangleIndices="0,1,2 2,3,0" TextureCoordinates="0,1 1,1 1,0 0,0" Positions="-0.5,-0.5,0 0.5,-0.5,0 0.5,0.5,0 -0.5,0.5,0" />
												</GeometryModel3D.Geometry>
												<GeometryModel3D.Material>
													<DiffuseMaterial>
														<DiffuseMaterial.Brush>
															<VisualBrush Visual="{Binding ElementName=BorderIn}" Stretch="Uniform" />
														</DiffuseMaterial.Brush>
													</DiffuseMaterial>
												</GeometryModel3D.Material>
												<GeometryModel3D.BackMaterial>
													<DiffuseMaterial>
														<DiffuseMaterial.Brush>
															<VisualBrush Visual="{Binding ElementName=BorderIn}" Stretch="Uniform">
																<VisualBrush.RelativeTransform>
																	<ScaleTransform ScaleX="-1" CenterX="0.5" />
																</VisualBrush.RelativeTransform>
															</VisualBrush>
														</DiffuseMaterial.Brush>
													</DiffuseMaterial>
												</GeometryModel3D.BackMaterial>
												<GeometryModel3D.Transform>
													<RotateTransform3D>
														<RotateTransform3D.Rotation>
															<AxisAngleRotation3D x:Name="rotate" Axis="0,3,0" Angle="0" />
														</RotateTransform3D.Rotation>
													</RotateTransform3D>
												</GeometryModel3D.Transform>
											</GeometryModel3D>
										</ModelVisual3D.Content>
									</ModelVisual3D>
								</Viewport3D.Children>
							</Viewport3D>
							<Border x:Name="BorderOut" VerticalAlignment="Stretch" Background="{TemplateBinding Background}">
								<Border x:Name="BorderIn" VerticalAlignment="Stretch" Background="{TemplateBinding Background}" >
									<Grid>
										<StackPanel VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Orientation="Horizontal">
											<!--<TextBlock Text="{TemplateBinding Content}"
									   FontSize="{Binding CountFontSize, RelativeSource={RelativeSource TemplatedParent}}"
									   VerticalAlignment="Center" />-->
											<ContentPresenter />
										</StackPanel>

										<Label Grid.ColumnSpan="2"
							   HorizontalAlignment="Left"
							   VerticalAlignment="Bottom"
							   Foreground="{TemplateBinding Foreground}">
											<AccessText Text="{Binding Title, RelativeSource={RelativeSource TemplatedParent}}"
										Foreground="{TemplateBinding Foreground}"
										TextWrapping="Wrap"
										FontSize="{Binding TitleFontSize, RelativeSource={RelativeSource TemplatedParent}}"
										Margin="3" />
										</Label>
									</Grid>
								</Border>
							</Border>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="ctrl:XAnimatedButton.ContentChanging">
							<BeginStoryboard>
								<Storyboard>
									<ObjectAnimationUsingKeyFrames Storyboard.TargetName="vp3D"  Storyboard.TargetProperty="Visibility">
										<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
										<DiscreteObjectKeyFrame KeyTime="0:0:1.1" Value="{x:Static Visibility.Hidden}" />
									</ObjectAnimationUsingKeyFrames>
									<DoubleAnimation To="0" Duration="0:0:0.05" Storyboard.TargetName="BorderOut" Storyboard.TargetProperty="Opacity" />
									<DoubleAnimation BeginTime="0:0:1.05" Duration="0:0:0.05" To="1" Storyboard.TargetName="BorderOut" Storyboard.TargetProperty="Opacity" />
									<Point3DAnimation To="0,0,1.1" From="0,0,0.5"  BeginTime="0:0:0.05" Duration="0:0:0.5" AutoReverse="True" DecelerationRatio="0.3"  Storyboard.TargetName="camera" Storyboard.TargetProperty="(PerspectiveCamera.Position)" />
									<DoubleAnimation From="0" To="180" AccelerationRatio="0.3" DecelerationRatio="0.3" BeginTime="0:0:0.05" Duration="0:0:1"  Storyboard.TargetName="rotate" Storyboard.TargetProperty="Angle" />
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style x:Key="SmallTileStyle" TargetType="ctrl:Tile">
		<Setter Property="Width" Value="70" />
		<Setter Property="Height" Value="70" />
	</Style>

	<Style x:Key="LargeTileStyle" TargetType="ctrl:Tile">
		<Setter Property="Width" Value="280" />
		<Setter Property="Height" Value="140" />
	</Style>

	<Style x:Key="MegaTileStyle" TargetType="ctrl:Tile">
		<Setter Property="Width" Value="280" />
		<Setter Property="Height" Value="280" />
		<Setter Property="CountFontSize"
				Value="40"/>
	</Style>

	<Style x:Key="SelectableTile" TargetType="ctrl:Tile">
		<Setter Property="Width" Value="44" />
		<Setter Property="Height" Value="44" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ctrl:Tile">
					<Grid Background="Gray">
						<StackPanel VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									Orientation="Horizontal">
							<ContentPresenter RecognizesAccessKey="True" />
							<TextBlock Text="{TemplateBinding Count}"
									   FontSize="{Binding CountFontSize, RelativeSource={RelativeSource TemplatedParent}}"
									   VerticalAlignment="Center" />
						</StackPanel>

						<Label Grid.ColumnSpan="2"
							   HorizontalAlignment="Left"
							   VerticalAlignment="Bottom"
							   Foreground="{TemplateBinding Foreground}">
							<AccessText Text="{Binding Title, RelativeSource={RelativeSource TemplatedParent}}"
										Foreground="{TemplateBinding Foreground}"
										TextWrapping="Wrap"
										FontSize="{Binding TitleFontSize, RelativeSource={RelativeSource TemplatedParent}}"
										Margin="3" />
						</Label>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="Button.IsPressed" Value="True">
							<Setter Property="Background" Value="{TemplateBinding Background}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>